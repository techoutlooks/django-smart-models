# Generated by Django 2.2.7 on 2019-11-15 18:49

from django.conf import settings
from django.db import migrations, models
import smartmodels.models.smart


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.SMARTMODELS_NAMESPACE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', editable=False, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, help_text='Creator (owner) of the resource.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='questions_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='questions_deleted', to=settings.AUTH_USER_MODEL)),
                ('namespaces', models.ManyToManyField(help_text='Visibility domain: org, district, domain, etc.', related_name='questions_owned', to=settings.SMARTMODELS_NAMESPACE_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='User obo. whom this resource is created. The sentinel owner on deletion.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='questions', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='questions_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', editable=False, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, help_text='Creator (owner) of the resource.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='posts_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='posts_deleted', to=settings.AUTH_USER_MODEL)),
                ('namespaces', models.ManyToManyField(help_text='Visibility domain: org, district, domain, etc.', related_name='posts_owned', to=settings.SMARTMODELS_NAMESPACE_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='User obo. whom this resource is created. The sentinel owner on deletion.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='posts_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', editable=False, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, help_text='Creator (owner) of the resource.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='comments_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='comments_deleted', to=settings.AUTH_USER_MODEL)),
                ('namespaces', models.ManyToManyField(help_text='Visibility domain: org, district, domain, etc.', related_name='comments_owned', to=settings.SMARTMODELS_NAMESPACE_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='User obo. whom this resource is created. The sentinel owner on deletion.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='comments_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', editable=False, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, help_text='Creator (owner) of the resource.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='answers_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='answers_deleted', to=settings.AUTH_USER_MODEL)),
                ('namespaces', models.ManyToManyField(help_text='Visibility domain: org, district, domain, etc.', related_name='answers_owned', to=settings.SMARTMODELS_NAMESPACE_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='User obo. whom this resource is created. The sentinel owner on deletion.', null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='answers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(smartmodels.models.smart.get_sentinel_user), related_name='answers_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
